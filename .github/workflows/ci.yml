name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches: 
      - master

env:
  DOCKER_REPO: butt
  
jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      # Uncomment and configure this step as needed
      # - name: Scan for common Rails security vulnerabilities using static analysis
      #   run: bin/brakeman --no-pager
      
      - name: Echo Ok
        run: echo 'scan_ruby ok'
  
  lint:
    runs-on: ubuntu-latest
    needs: scan_ruby
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      # Uncomment and configure this step as needed
      # - name: Lint code for consistent style
      #   run: bin/rubocop -f github
      
      - name: Echo Ok
        run: echo 'lint ok'
  
  build-docker:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest
  
  test:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull Docker Image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest

      - name: Run tests in Docker
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest bundle exec rspec
  